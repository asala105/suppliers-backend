services:
  suppliers-data-service:
    build:
      context: ./services/suppliers-data-service
      dockerfile: DockerFile
    ports:
      - '3001:3001'
    environment:
      DB_HOST: postgres
      DB_PORT: ${DB_PORT}
      PORT: ${PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    depends_on:
      - postgres
    volumes:
      - ./components:/components
    networks:
      - app-network

  dapr-sidecar-suppliers-data-service:
    image: daprio/daprd:latest
    command: [
      './daprd',
      '-app-id', 'suppliers-data-service',
      '-app-port', '3001',
      '-dapr-http-port', '3500',
      '-components-path', '/components'
    ]
    depends_on:
      - suppliers-data-service
    networks:
      - app-network

  suppliers-service:
    build:
      context: ./services/suppliers-service
      dockerfile: DockerFile
    ports:
      - '3002:3002'
    depends_on:
      - postgres
    networks:
      - app-network
    volumes:
      - ./components:/components

  
  dapr-sidecar-suppliers-service:
    image: daprio/daprd:latest
    command: [
      './daprd',
      '-app-id', 'suppliers-service',
      '-app-port', '3002',
      '-dapr-http-port', '3501',
      '-components-path', '/components'
    ]
    depends_on:
      - suppliers-service
    networks:
      - app-network

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  app-network:
volumes:
  postgres_data: